local cards = require("card.cards")

function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

local function can_play_card(self, card)
	local card_script_url = msg.url(nil, card, "card")
	local card_name = go.get(card_script_url, "card_name")
	local showing_front = go.get(card_script_url, "showing_front")
	return cards.is_joker(card_name) and showing_front
end

local function shake(self)
	go.animate(".", "euler.z", go.PLAYBACK_ONCE_FORWARD, 3, go.EASING_LINEAR, 0.04, 0, function()
		go.animate(".", "euler.z", go.PLAYBACK_ONCE_FORWARD, -3, go.EASING_LINEAR, 0.08, 0, function()
			go.animate(".", "euler.z", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 0.04)
		end)
	end)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		local card = message.other_id
		if message.enter then
			if can_play_card(self, card) then
				msg.post(card, "entered_skill", { skill_id = msg.url(".") })
			else
				shake(self)
			end
		else
			if can_play_card(self, card) then
				msg.post(message.other_id, "left_skill")
			end
		end
	elseif message_id == hash("execute_skill") then
		go.animate(".", "position.y", go.PLAYBACK_ONCE_FORWARD, go.get_position().z + 1600, go.EASING_INBACK, 0.4)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
